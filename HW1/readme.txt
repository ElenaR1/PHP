Домашно 1.1 - Times Table 
Направете таблица за умножение (1-9) използвайки PHP

Клетките от първия ред и колона трябва да са заглавни (th)

Не сме учили css, така че стиловете са по желание

Домашно 1.2 - Electives 
Имплементирайте функциите

showPage($data, $pageId)
showNav($data, $pageId)
Където $data ще е асоциативен масив от следния вид

$data = [
  'webgl' => [
    'title' => 'Компютърна графика с WebGL',
    'description' => '...',
    'lecturer' => 'доц. П. Бойчев',
  ],
  'go' => [
    'title' => 'Програмиране с Go',
    'description' => '...',
    'lecturer' => 'Николай Бачийски',
  ]
];
А пък $pageId ще е стринг като 'webgl'

Например showPage($data, 'webgl') трябва да върне (не да изпринтира) следния низ:

<h1> Компютърна графика с WebGL </h1> 
<h2> доц. П. Бойчев </h2> 
<p> ... </p> 
А пък showNav($data, 'webgl') трябва да върне (не да изпринтира) следния низ:

<nav> 
  <a href="?page=webgl" class="selected"> Компютърна графика с WebGL </a> 
  <a href="?page=go"> Програмиране с Go </a> 
</nav> 
Хиперлинковете към кусовете трябва да се съдържат в nav секция. Всеки хиперлинк трябва да води към съответната страница на курс и за текст на хиперлинка трябва да се изписва името на курса.

Ако адресът на хиперлинка съвпада с текущо отворения курс ($pageId), то към хиперлинка трябва да се добави клас selected, както е показано в примера.


Домашно 1.3 - Request info 
Напишете клас Request, улесняващ работата с HTTP заявки.

Неговият конструктор трябва да приема единствен аргумент - масив като $_SERVER, от който да прочете необходимите данни.

Класът трябва да има следните методи:

getMethod() - връща като низ, състоящ се само от малки букви, метода на завката - get, post, put и т.н.
getPath() - връща като низ path часта на адреса на заявката.
getURL() - връща като низ целия адрес на заявката. Например https://www.abv.bg?na_baba_ti=хвърчилото&чичковите=chervenotikvenichkovcheta
getUserAgent() - връща като низ съдържанието на HTTP Header полето User-Agent.
Имплементирайте клас GetRequest, наследяващ Request, който да има допълнителен метод getData. Този метод трябва да прочита query string параметрите върне асоциативен масив с тях.

Например ако имаме query string а=1&b=2, то getData() трябва да върне:

array(
  "a" => "1",
  "b" => "2"
)
